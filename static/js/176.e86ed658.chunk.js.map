{"version":3,"file":"static/js/176.e86ed658.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Users/Users.module.css?b9d0","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersPhoto\":\"Users_usersPhoto__Sb4o6\",\"selectedPage\":\"Users_selectedPage__QJo1h\"};","import React, {useState} from 'react';\r\nimport s from \"../../Users/Users.module.css\";\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    onPageChanged: (p: number) => void\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n}\r\n\r\nexport const Paginator = (props: PaginatorPropsType) => {\r\n\r\n    const pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionSize = 10\r\n\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    // let curP = props.currentPage;\r\n    // let curPF = ((curP - 5) < 0) ? 0 : curP - 5;\r\n    // let curPL = curP + 5;\r\n    // let slicedPages = pages.slice(curPF, curPL);\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1\r\n                ? <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>\r\n                : <button disabled>PREV</button>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <button key={p}\r\n                                   onClick={() => {\r\n                                       props.onPageChanged(p)\r\n                                   }}\r\n                                   className={props.currentPage === p ? s.selectedPage : ''}\r\n                    >\r\n                        {p}\r\n                    </button>\r\n                })}\r\n            {portionCount > portionNumber\r\n                ? <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>\r\n                : <button disabled>PREV</button>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../img/1.png\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\n\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    followingInProgress: string[]\r\n    toggleFollowingProgress: (followingInProgress: boolean, id: string) => void\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n}\r\nexport const User = (props: UserPropsType) => {\r\n    return (\r\n        <div key={props.user.id}>\r\n            <span>\r\n                <div>\r\n                   <NavLink to={`/profile/${props.user.id}`}>\r\n                        <img className={s.usersPhoto}\r\n                             src={props.user.photos.small ? props.user.photos.small : userPhoto}\r\n                             alt=\"user avatar\"\r\n                        />\r\n                   </NavLink>\r\n                </div>\r\n                <div>\r\n                     <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                             onClick={() => {\r\n                                 props.toggleFollowingProgress(true, props.user.id)\r\n                                 !props.user.followed ? props.follow(props.user.id) : props.unfollow(props.user.id)\r\n                             }\r\n                             }>\r\n                     {!props.user.followed ? 'subscribed' : 'unsubscribed'}\r\n                     </button>\r\n                                    </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                     <div>{props.user.name}</div>\r\n                     <div>{props.user.status}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\n\r\ntype UsersPropsType = {\r\n    onPageChanged: (p: number) => void\r\n    currentPage: number\r\n    users: UserType[]\r\n    subscriptionChange: (id: string) => void\r\n    toggleFollowingProgress: (followingInProgress: boolean, id: string) => void\r\n    followingInProgress: string[]\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n}\r\n\r\nexport const Users = React.memo((props: UsersPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator pageSize={props.pageSize}\r\n                       totalUsersCount={props.totalUsersCount}\r\n                       onPageChanged={props.onPageChanged}\r\n                       currentPage={props.currentPage}/>\r\n            {props.users.map(u => {\r\n                return (\r\n                    <User key={u.id}\r\n                          user={u}\r\n                          followingInProgress={props.followingInProgress}\r\n                          toggleFollowingProgress={props.toggleFollowingProgress}\r\n                          follow={props.follow}\r\n                          unfollow={props.unfollow}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n})\r\n\r\n","import {StoreType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: StoreType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: StoreType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: StoreType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: StoreType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: StoreType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: StoreType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\nimport {StoreType} from \"../../redux/redux-store\";\nimport {\n    follow, requestUsers,\n    setCurrentPage,\n    subscriptionChange,\n    toggleFollowingProgress,\n    unfollow,\n    UserType\n} from \"../../redux/users-reducer\";\nimport React from \"react\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../common/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers\n} from \"../../redux/users-selectors\";\n\n\ntype mapStateToProps = {\n    users: UserType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: string[]\n}\n\ntype mapDispatchToPropsType = {\n    subscriptionChange: (id: string) => void\n    toggleFollowingProgress: (followingInProgress: boolean, id: string) => void\n    requestUsers: (currentPage: number, pageSize: number) => void\n    //setCurrentPage: (page: number) => void\n    follow: (userId: string) => void\n    unfollow: (userId: string) => void\n}\n\n\nexport type UsersPropsType = mapStateToProps & mapDispatchToPropsType\n\nclass UsersContainer extends React.Component<UsersPropsType, StoreType> {\n\n\n    componentDidMount() {\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged = (page: number) => {\n        //this.props.setCurrentPage(page)\n        this.props.requestUsers(page, this.props.pageSize)\n    }\n\n    render() {\n\n\n        return (<>\n                {\n                    (this.props.isFetching\n                        ? <Preloader/>\n                        : <Users\n                            pageSize={this.props.pageSize}\n                            totalUsersCount={this.props.totalUsersCount}\n                            onPageChanged={this.onPageChanged}\n                            currentPage={this.props.currentPage}\n                            users={this.props.users}\n                            followingInProgress={this.props.followingInProgress}\n                            subscriptionChange={this.props.subscriptionChange}\n                            toggleFollowingProgress={this.props.toggleFollowingProgress}\n                            follow={this.props.follow}\n                            unfollow={this.props.unfollow}\n                        />)\n                }\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: StoreType): mapStateToProps => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n    }\n}\n\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        subscriptionChange,\n        setCurrentPage,\n        toggleFollowingProgress,\n        requestUsers,\n        follow,\n        unfollow,\n    }),\n    //withAuthRedirectComponent\n)(UsersContainer)","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Paginator","props","pageCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","disabled","filter","p","map","onPageChanged","className","currentPage","s","User","to","user","id","src","photos","small","userPhoto","alt","followingInProgress","some","toggleFollowingProgress","followed","unfollow","follow","name","status","Users","React","users","u","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","page","requestUsers","this","Preloader","subscriptionChange","compose","connect","setCurrentPage","_slicedToArray","arr","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","value","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}